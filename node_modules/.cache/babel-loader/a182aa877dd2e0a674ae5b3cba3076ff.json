{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/manager/list/Modal.jsx\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addList } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from 'formik';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  description: {\n    padding: \"10px\"\n  }\n}));\nexport default function SimpleModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [option, setOption] = React.useState(''); // const userListTodo = useSelector((state) => {\n  //     // console.log(state, \"ini state card\");\n  //     return state.listTodo\n  //     // return state.listTodo\n  // })\n\n  const dispatch = useDispatch();\n\n  const handleSave = item => {\n    // const userid = localStorage.getItem('userid')\n    console.log(values, 'ini values'); // localStorage.getItem('userid', JSON.stringify(userid))\n\n    const dataTodo = {\n      todo: item.todo,\n      status: item.status,\n      userID: props.id\n    };\n    dispatch(addList(dataTodo)); // // console.log(userProfile, \"log user profile\");\n    // // console.log(updateDataUser, \"log updateuser\");\n    // dispatch(updateDataTodo(dataTodo));\n    // dispatch(fetchListToDoById(dataTodo.id))\n\n    alert(\"Data berhasil ditambahkan\");\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setOption(event.target.value);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      todo: '',\n      status: '',\n      userID: props.id\n    },\n    const: true,\n    userid: props.id,\n    validate: values => {\n      const errors = {};\n\n      if (!values.todo) {\n        errors.todo = 'Tidak Boleh Kosong';\n      }\n\n      if (!values.status) {\n        errors.status = 'Tidak Boleh Kosong';\n      }\n\n      if (!values.userID) {\n        errors.userID = 'Tidak Boleh Kosong';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      userid\n    }, {\n      setSubmitting\n    }) => {\n      handleSave(values, {\n        userid\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"todo\",\n    label: \"Tambah Todo Di sini\",\n    autoComplete: \"todo\",\n    name: \"todo\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, errors.todo && touched.todo && errors.todo), /*#__PURE__*/React.createElement(TextField, {\n    id: \"status\",\n    label: \"Tambah Status\",\n    autoComplete: \"status\",\n    name: \"status\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, errors.status && touched.status && errors.status), /*#__PURE__*/React.createElement(TextField, {\n    id: \"userID\",\n    autoComplete: \"userID\",\n    name: \"userID\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.userID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, errors.userID && touched.userID && errors.userID), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    style: {\n      margin: \"20px\"\n    },\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Simpan\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, \"Batal\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleOpen,\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Tambah Todo\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, body));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/manager/list/Modal.jsx"],"names":["React","useEffect","makeStyles","Modal","Button","TextField","MenuItem","addList","useDispatch","useSelector","Formik","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","description","SimpleModal","props","classes","modalStyle","useState","open","setOpen","option","setOption","dispatch","handleSave","item","console","log","values","dataTodo","todo","status","userID","id","alert","handleOpen","handleClose","handleChange","event","target","value","body","errors","userid","setSubmitting","touched","handleBlur","handleSubmit","isSubmitting","color","fontStyle","margin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addList } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from 'formik';\n\n\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    description: {\n        padding: \"10px\"\n    },\n}));\n\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [option, setOption] = React.useState('');\n\n    // const userListTodo = useSelector((state) => {\n    //     // console.log(state, \"ini state card\");\n    //     return state.listTodo\n    //     // return state.listTodo\n    // })\n\n    const dispatch = useDispatch();\n\n    const handleSave = (item) => {\n        // const userid = localStorage.getItem('userid')\n        console.log(values, 'ini values');\n        \n        // localStorage.getItem('userid', JSON.stringify(userid))\n        \n        const dataTodo = {\n            todo: item.todo,\n            status: item.status,\n            userID: props.id\n        };\n        \n        dispatch(addList(dataTodo))\n        // // console.log(userProfile, \"log user profile\");\n\n        // // console.log(updateDataUser, \"log updateuser\");\n\n        // dispatch(updateDataTodo(dataTodo));\n        // dispatch(fetchListToDoById(dataTodo.id))\n        alert(\"Data berhasil ditambahkan\")\n        setOpen(false)\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        setOption(event.target.value);\n    };\n\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <Formik\n                initialValues={{ todo: '', status: '', userID: props.id }}\n                const userid = {props.id}\n                validate={values => {\n                    const errors = {};\n                    if (!values.todo) {\n                        errors.todo = 'Tidak Boleh Kosong';\n                    }\n                    if (!values.status) {\n                        errors.status = 'Tidak Boleh Kosong'\n                    }\n                    if (!values.userID) {\n                        errors.userID = 'Tidak Boleh Kosong'\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, {userid},{ setSubmitting }) => {\n                    handleSave(values, {userid})\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                id=\"todo\"\n                                label=\"Tambah Todo Di sini\"\n                                autoComplete=\"todo\"\n                                name=\"todo\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.todo}\n                            />\n                            <p\n                                style={{\n                                    color: \"red\",\n                                    fontStyle: \"italic\",\n                                }}\n                            >\n                                {errors.todo &&\n                                    touched.todo &&\n                                    errors.todo}\n                            </p>\n                            <TextField\n                                id=\"status\"\n                                label=\"Tambah Status\"\n                                autoComplete=\"status\"\n                                name=\"status\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.status}\n                            />\n                            <p\n                                style={{\n                                    color: \"red\",\n                                    fontStyle: \"italic\",\n                                }}\n                            >\n                                {errors.status &&\n                                    touched.status &&\n                                    errors.status}\n                            </p>\n                            <TextField\n                                id=\"userID\"\n                                autoComplete=\"userID\"\n                                name=\"userID\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.userID}\n                            />\n                            <p\n                                style={{\n                                    color: \"red\",\n                                    fontStyle: \"italic\",\n                                }}\n                            >\n                                {errors.userID &&\n                                    touched.userID &&\n                                    errors.userID}\n                            </p>\n                            <br />\n                            <Button color=\"primary\" style={{ margin: \"20px\" }} disabled={isSubmitting}>\n                                Simpan\n                            </Button>\n                            <Button color=\"primary\" onClick={handleClose} style={{ margin: \"20px\" }}>\n                                Batal\n                            </Button>\n                        </form>\n                    )}\n            </Formik>\n        </div>\n    );\n\n    return (\n        <div>\n            {/* <button type=\"button\" onClick={handleOpen}>\n        Detail\n      </button> */}\n            {/* <Button size=\"small\" onClick={handleOpen}>Detail</Button> */}\n            <Button color=\"primary\" onClick={handleOpen} style={{ margin: \"10px\" }}>\n                Tambah Todo\n      </Button>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}