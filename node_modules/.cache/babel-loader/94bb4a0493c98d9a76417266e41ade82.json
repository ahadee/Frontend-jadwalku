{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/employee/list/Modal.jsx\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { fetchListToDoById, updateDataTodo } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nconst options = [{\n  value: 'On Progess',\n  label: 'On Progess'\n}, {\n  value: 'Pending',\n  label: 'Pending'\n}, {\n  value: 'Done',\n  label: 'Done'\n}];\nexport default function SimpleModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [option, setOption] = React.useState('');\n  const userListTodo = useSelector(state => {\n    console.log(state, \"ini state card\");\n    return state.listTodo; // return state.listTodo\n  });\n  const [status, setStatus] = React.useState('');\n  const dispatch = useDispatch();\n  const userid = localStorage.getItem(\"userid\");\n\n  const handleSave = item => {\n    const userid = localStorage.getItem('userid');\n    console.log(item, \"ini item\");\n    localStorage.getItem('userid', JSON.stringify(userid));\n    const dataTodo = {\n      id: userid,\n      status: item.status\n    }; // console.log(userProfile, \"log user profile\");\n    // console.log(updateDataUser, \"log updateuser\");\n\n    dispatch(updateDataTodo(dataTodo.id, props.id));\n    dispatch(fetchListToDoById(dataTodo.id)); // alert(\"Data telah tersimpan\")\n\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setOption(event.target.value);\n    setStatus(event.target.value);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"Pilih Status\",\n    value: option,\n    onChange: handleChange,\n    helperText: \"Update Status Todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleSave,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Simpan\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Batal\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleOpen,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Update Status\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/employee/list/Modal.jsx"],"names":["React","useEffect","makeStyles","Modal","Button","TextField","MenuItem","fetchListToDoById","updateDataTodo","useDispatch","useSelector","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","options","value","label","SimpleModal","props","classes","modalStyle","useState","open","setOpen","option","setOption","userListTodo","state","console","log","listTodo","status","setStatus","dispatch","userid","localStorage","getItem","handleSave","item","JSON","stringify","dataTodo","id","handleOpen","handleClose","handleChange","event","target","body","map","margin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { fetchListToDoById, updateDataTodo, } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst options = [\n  {\n    value: 'On Progess',\n    label: 'On Progess',\n  },\n  {\n    value: 'Pending',\n    label: 'Pending',\n  },\n  {\n    value: 'Done',\n    label: 'Done',\n  },\n];\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [option, setOption] = React.useState('');\n\n  const userListTodo = useSelector((state) => {\n    console.log(state, \"ini state card\");\n    return state.listTodo\n    // return state.listTodo\n  })\n\n  const [status, setStatus] = React.useState('')\n\n  const dispatch = useDispatch();\n\n  const userid = localStorage.getItem(\"userid\");\n\n  const handleSave = (item) => {\n    const userid = localStorage.getItem('userid')\n    console.log(item, \"ini item\")\n\n\n    localStorage.getItem('userid', JSON.stringify(userid))\n\n    const dataTodo = {\n      id: userid,\n      status: item.status\n    };\n\n    // console.log(userProfile, \"log user profile\");\n\n    // console.log(updateDataUser, \"log updateuser\");\n\n    dispatch(updateDataTodo(dataTodo.id,props.id));\n    dispatch(fetchListToDoById(dataTodo.id))\n    // alert(\"Data telah tersimpan\")\n    setOpen(false)\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n    setStatus(event.target.value)\n    \n  };\n\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <TextField\n        id=\"standard-select-currency\"\n        select\n        label=\"Pilih Status\"\n        value={option}\n        onChange={handleChange}\n        helperText=\"Update Status Todo\"\n      >\n        {options.map((option) => (\n          <MenuItem key={option.value} value={option.value}  >\n            {option.label} \n          </MenuItem>\n        ))}\n      </TextField>\n      {/* <br /> */}\n      <Button color=\"primary\" onClick={handleSave} style={{ margin: \"20px\" }}>\n        Simpan\n      </Button>\n      <Button color=\"primary\" onClick={handleClose} style={{ margin: \"20px\" }}>\n        Batal\n      </Button>\n    </div>\n  );\n\n  return (\n    <div>\n      {/* <button type=\"button\" onClick={handleOpen}>\n        Detail\n      </button> */}\n      {/* <Button size=\"small\" onClick={handleOpen}>Detail</Button> */}\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen} style={{ margin: \"20px\" }}>\n        Update Status\n      </Button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}