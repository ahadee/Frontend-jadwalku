{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/register/Register.jsx\";\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MaterialLink from \"@material-ui/core/Link\";\nimport { useDispatch } from \"react-redux\"; // import { addUser } from \"../redux/actions/userActions\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\"; // import Logo from \"../components/logo/Tourist.jpg\";\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Copyright Â© \", /*#__PURE__*/React.createElement(MaterialLink, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"SEARAH\"), \" \", new Date().getFullYear(), \".\");\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function SignUp() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\" // className={classes.font2}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Daftar\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      gender: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = \"Required\";\n      }\n\n      if (!values.gender) {\n        errors.gender = \"Required\";\n      }\n\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n\n      return errors;\n    },\n    onSubmit: async values => {// await dispatch(addUser(values, history));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, ({\n    handleChange,\n    handleSubmit,\n    values,\n    isSubmitting,\n    handleBlur,\n    errors,\n    touched\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"username\",\n      name: \"username\",\n      variant: \"outlined\" // required\n      ,\n      fullWidth: true,\n      id: \"username\",\n      label: \"User Name\",\n      onChange: handleChange,\n      value: values.username,\n      onBlur: handleBlur // className={classes.font}\n      ,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, errors.username && touched.username && errors.username)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"lastName\",\n      label: \"Last Name\",\n      name: \"lastName\",\n      autoComplete: \"lname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email // className={classes.font}\n      ,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }\n    }, errors.email && touched.email && errors.email)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password // className={classes.font}\n      ,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }, errors.password && touched.password && errors.password))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, \"Sign Up\")));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: \"none\"\n    } // className={classes.font3}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, \"Already have an account? Sign in\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/register/Register.jsx"],"names":["React","Avatar","Button","CssBaseline","TextField","Grid","Box","Typography","makeStyles","Container","Formik","Link","useHistory","MaterialLink","useDispatch","InputLabel","Select","FormControl","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","dispatch","history","username","gender","email","password","values","errors","test","handleChange","handleSubmit","isSubmitting","handleBlur","touched","className","floatingLabelFocusStyle","color","fontStyle","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MaterialLink from \"@material-ui/core/Link\";\nimport { useDispatch } from \"react-redux\";\n// import { addUser } from \"../redux/actions/userActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\n// import Logo from \"../components/logo/Tourist.jpg\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright Â© \"}\n            <MaterialLink color=\"inherit\" href=\"https://material-ui.com/\">\n                SEARAH\n            </MaterialLink>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                // className={classes.font2}\n                >\n                    Daftar\n                </Typography>\n                <Formik\n                    initialValues={{\n                        username: \"\",\n                        gender: \"\",\n                        email: \"\",\n                        password: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.username) {\n                            errors.username = \"Required\";\n                        }\n                        if (!values.gender) {\n                            errors.gender = \"Required\";\n                        }\n\n                        if (!values.password) {\n                            errors.password = \"Required\";\n                        }\n\n                        if (!values.email) {\n                            errors.email = \"Required\";\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                                values.email\n                            )\n                        ) {\n                            errors.email = \"Invalid email address\";\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={async (values, ) => {\n                        // await dispatch(addUser(values, history));\n\n                    }}\n                >\n                    {({\n                        handleChange,\n                        handleSubmit,\n                        values,\n                        isSubmitting,\n                        handleBlur,\n                        errors,\n                        touched,\n                    }) => {\n                        return (\n                            <div>\n                                <form\n                                    className={classes.form}\n                                    noValidate\n                                    onSubmit={handleSubmit}\n                                >\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                autoComplete=\"username\"\n                                                name=\"username\"\n                                                variant=\"outlined\"\n                                                // required\n                                                fullWidth\n                                                id=\"username\"\n                                                label=\"User Name\"\n                                                onChange={handleChange}\n                                                value={values.username}\n                                                onBlur={handleBlur}\n                                                // className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.username &&\n                                                    touched.username &&\n                                                    errors.username}\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"lastName\"\n                                                label=\"Last Name\"\n                                                name=\"lastName\"\n                                                autoComplete=\"lname\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"email\"\n                                                label=\"Email Address\"\n                                                name=\"email\"\n                                                autoComplete=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                // className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.email &&\n                                                    touched.email &&\n                                                    errors.email}\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"password\"\n                                                label=\"Password\"\n                                                type=\"password\"\n                                                id=\"password\"\n                                                autoComplete=\"current-password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                // className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.password &&\n                                                    touched.password &&\n                                                    errors.password}\n                                            </p>\n                                        </Grid>\n                                    </Grid>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </form>\n                            </div>\n                        );\n                    }}\n                </Formik>\n                <Grid container justify=\"flex-end\">\n                    <Grid item>\n                        <Link\n                            to=\"/\"\n                            style={{ textDecoration: \"none\" }}\n                        // className={classes.font3}\n                        >\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </div>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}