{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/manager/list/Modal.jsx\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addList } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from 'formik';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  description: {\n    padding: \"10px\"\n  }\n}));\nexport default function SimpleModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [option, setOption] = React.useState('');\n  const userListTodo = useSelector(state => {\n    console.log(state, \"ini state card\");\n    return state.listTodo; // return state.listTodo\n  });\n  const dispatch = useDispatch();\n\n  const handleSave = (values, userid) => {\n    // const userid = localStorage.getItem('userid')\n    console.log(values, 'ini values');\n    dispatch(addList(values, userid)); // localStorage.getItem('userid', JSON.stringify(userid))\n    // const dataTodo = {\n    //     id: userid,\n    //     status: item.status\n    // };\n    // // console.log(userProfile, \"log user profile\");\n    // // console.log(updateDataUser, \"log updateuser\");\n    // dispatch(updateDataTodo(dataTodo));\n    // dispatch(fetchListToDoById(dataTodo.id))\n\n    alert(\"Data berhasil ditambahkan\");\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setOption(event.target.value);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"todo\",\n    label: \"Tambah Todo Di sini\",\n    autoComplete: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"status\",\n    label: \"Tambah Status\",\n    autoComplete: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"userID\",\n    defaultValue: props.id,\n    autoComplete: \"userID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => handleSave(values, props.id),\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Simpan\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, \"Batal\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleOpen,\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Tambah Todo\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, body));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/manager/list/Modal.jsx"],"names":["React","useEffect","makeStyles","Modal","Button","TextField","MenuItem","addList","useDispatch","useSelector","Formik","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","description","SimpleModal","props","classes","modalStyle","useState","open","setOpen","option","setOption","userListTodo","state","console","log","listTodo","dispatch","handleSave","values","userid","alert","handleOpen","handleClose","handleChange","event","target","value","body","email","password","errors","test","setSubmitting","setTimeout","JSON","stringify","touched","handleBlur","handleSubmit","isSubmitting","id","margin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { addList } from \"../../../redux/actions/todoActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from 'formik';\n\n\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    description: {\n        padding: \"10px\"\n    },\n}));\n\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [option, setOption] = React.useState('');\n\n    const userListTodo = useSelector((state) => {\n        console.log(state, \"ini state card\");\n        return state.listTodo\n        // return state.listTodo\n    })\n\n    const dispatch = useDispatch();\n\n    const handleSave = (values, userid) => {\n        // const userid = localStorage.getItem('userid')\n        console.log(values, 'ini values');\n        dispatch(addList(values, userid))\n\n        // localStorage.getItem('userid', JSON.stringify(userid))\n\n        // const dataTodo = {\n        //     id: userid,\n        //     status: item.status\n        // };\n\n        // // console.log(userProfile, \"log user profile\");\n\n        // // console.log(updateDataUser, \"log updateuser\");\n\n        // dispatch(updateDataTodo(dataTodo));\n        // dispatch(fetchListToDoById(dataTodo.id))\n        alert(\"Data berhasil ditambahkan\")\n        setOpen(false)\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (event) => {\n        setOption(event.target.value);\n    };\n\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                    }, 400);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                id=\"todo\"\n                                label=\"Tambah Todo Di sini\"\n                                autoComplete=\"todo\"\n                            />\n                            <TextField\n                                id=\"status\"\n                                label=\"Tambah Status\"\n                                autoComplete=\"status\"\n                            />\n                            <TextField\n                                id=\"userID\"\n                                defaultValue={props.id}\n                                autoComplete=\"userID\"\n                            />\n                            <br />\n                            <Button color=\"primary\" onClick={() => handleSave(values, props.id)} style={{ margin: \"20px\" }}>\n                                Simpan\n                            </Button>\n                            <Button color=\"primary\" onClick={handleClose} style={{ margin: \"20px\" }}>\n                                Batal\n                            </Button>\n                        </form>\n                    )}\n            </Formik>\n        </div>\n    );\n\n    return (\n        <div>\n            {/* <button type=\"button\" onClick={handleOpen}>\n        Detail\n      </button> */}\n            {/* <Button size=\"small\" onClick={handleOpen}>Detail</Button> */}\n            <Button color=\"primary\" onClick={handleOpen} style={{ margin: \"10px\" }}>\n                Tambah Todo\n      </Button>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}