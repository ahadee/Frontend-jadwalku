{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/employee/list/Modal.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Formik } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser, updateDataUser } from '../../../redux/actions/userActions';\nconst profile = useSelector(state => {\n  // console.log(state, \"ini state\");\n  return state.userList.user;\n});\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function SimpleModal() {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = item => {\n    const userid = localStorage.getItem('userid'); // console.log(userid);\n\n    localStorage.getItem('userid', JSON.stringify(userid));\n    const userProfile = {\n      id: userid,\n      first_name: item.first_name,\n      last_name: item.last_name,\n      password: item.password,\n      email: item.email\n    }; // console.log(userProfile, \"log user profile\");\n    // console.log(updateDataUser, \"log updateuser\");\n\n    dispatch(updateDataUser(userProfile));\n    dispatch(getUser(userProfile.id));\n    alert(\"Data telah tersimpan\");\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paperModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Ubah Profil\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: profile.email,\n      password: profile.password,\n      first_name: profile.first_name,\n      last_name: profile.last_name\n    },\n    validate: values => {\n      const errors = {}; // if (!values.first_name) {\n      //     errors.first_name = \"Required\";\n      // }\n      // if (!values.last_name) {\n      //     errors.last_name = \"Required\";\n      // }\n      // if (!values.password) {\n      //     errors.password = 'Required';\n      // }\n      // if (!values.email) {\n      //     errors.email = 'Required';\n      // } \n\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      // setTimeout(() => {\n      // console.log(values)\n      // alert(JSON.stringify(values));\n      //     setSubmitting(false);\n      // }, 400);\n      handleSave(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textField,\n    required: true,\n    id: \"standard-required\",\n    label: \"Nama Depan\",\n    defaultValue: \"\",\n    autoComplete: \"first_name\",\n    name: \"first_name\",\n    onChange: handleChange,\n    value: values.first_name,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, errors.first_name && touched.first_name && errors.first_name), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textField,\n    required: true,\n    id: \"standard-required\",\n    label: \"Nama Belakang\",\n    defaultValue: \"\",\n    name: \"last_name\",\n    autoComplete: \"last_name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, errors.last_name && touched.last_name && errors.last_name), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textField,\n    required: true,\n    id: \"standard-required\",\n    label: \"Email\",\n    defaultValue: \"\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, errors.email && touched.email && errors.email), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textField,\n    required: true,\n    id: \"standard-required\",\n    label: \"Password\",\n    defaultValue: \"\",\n    name: \"password\",\n    type: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, errors.password && touched.password && errors.password), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Simpan\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Batal\")))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleOpen,\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"Ubah\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/employee/list/Modal.jsx"],"names":["React","makeStyles","Modal","Button","Formik","TextField","useDispatch","useSelector","getUser","updateDataUser","profile","state","userList","user","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","modalStyle","useState","open","setOpen","dispatch","handleOpen","handleClose","handleSave","item","userid","localStorage","getItem","JSON","stringify","userProfile","id","first_name","last_name","password","email","alert","body","paperModal","values","errors","test","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","form","textField","color","fontStyle","margin","display","justifyContent","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Formik } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser, updateDataUser } from '../../../redux/actions/userActions';\n\n\nconst profile = useSelector((state) => {\n  // console.log(state, \"ini state\");\n\n  return state.userList.user;\n});\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = (item) => {\n    const userid = localStorage.getItem('userid')\n    // console.log(userid);\n\n\n    localStorage.getItem('userid', JSON.stringify(userid))\n\n    const userProfile = {\n      id: userid,\n      first_name: item.first_name,\n      last_name: item.last_name,\n      password: item.password,\n      email: item.email,\n    };\n\n    // console.log(userProfile, \"log user profile\");\n\n    // console.log(updateDataUser, \"log updateuser\");\n\n    dispatch(updateDataUser(userProfile));\n    dispatch(getUser(userProfile.id))\n    alert(\"Data telah tersimpan\")\n    setOpen(false)\n  };\n\n\n  const body = (\n    <div style={modalStyle} className={classes.paperModal}>\n      <h2 id=\"simple-modal-title\">Ubah Profil</h2>\n      <Formik\n        initialValues={{\n          email: profile.email,\n          password: profile.password,\n          first_name: profile.first_name,\n          last_name: profile.last_name,\n        }}\n        validate={values => {\n          const errors = {};\n          // if (!values.first_name) {\n          //     errors.first_name = \"Required\";\n          // }\n          // if (!values.last_name) {\n          //     errors.last_name = \"Required\";\n          // }\n          // if (!values.password) {\n          //     errors.password = 'Required';\n          // }\n          // if (!values.email) {\n          //     errors.email = 'Required';\n          // } \n          if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          // setTimeout(() => {\n          // console.log(values)\n\n          // alert(JSON.stringify(values));\n          //     setSubmitting(false);\n          // }, 400);\n          handleSave(values)\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n            <form\n              className={classes.form}\n              noValidate\n              onSubmit={handleSubmit}>\n              <TextField\n                className={classes.textField}\n                required id=\"standard-required\"\n                label=\"Nama Depan\"\n                defaultValue=\"\"\n                autoComplete=\"first_name\"\n                name=\"first_name\"\n                onChange={handleChange}\n                value={values.first_name}\n                onBlur={handleBlur}\n              />\n              <p\n                style={{\n                  color: \"red\",\n                  fontStyle: \"italic\",\n                }}\n              >\n                {errors.first_name &&\n                  touched.first_name &&\n                  errors.first_name}\n              </p>\n              <TextField\n                className={classes.textField}\n                required id=\"standard-required\"\n                label=\"Nama Belakang\"\n                defaultValue=\"\"\n                name=\"last_name\"\n                autoComplete=\"last_name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.last_name}\n              />\n              <p\n                style={{\n                  color: \"red\",\n                  fontStyle: \"italic\",\n                }}\n              >\n                {errors.last_name &&\n                  touched.last_name &&\n                  errors.last_name}\n              </p>\n              <TextField\n                className={classes.textField}\n                required id=\"standard-required\"\n                label=\"Email\"\n                defaultValue=\"\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              <p\n                style={{\n                  color: \"red\",\n                  fontStyle: \"italic\",\n                }}\n              >\n                {errors.email &&\n                  touched.email &&\n                  errors.email}\n              </p>\n              <TextField\n                className={classes.textField}\n                required id=\"standard-required\"\n                label=\"Password\"\n                defaultValue=\"\"\n                name=\"password\"\n                type=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              <p\n                style={{\n                  color: \"red\",\n                  fontStyle: \"italic\",\n                }}\n              >\n                {errors.password &&\n                  touched.password &&\n                  errors.password}\n              </p>\n              {/* <br /> */}\n              <div style={{ margin: \"20px\", display: \"flex\", justifyContent: \"center\", }}>\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button} disabled={isSubmitting}>\n                  Simpan\n                            </Button>\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={handleClose}>\n                  Batal\n                            </Button>\n              </div>\n            </form>\n          )}\n      </Formik>\n    </div>\n  );\n\n  return (\n    <div>\n      {/* <button type=\"button\" onClick={handleOpen}>\n        Detail\n      </button> */}\n      {/* <Button size=\"small\" onClick={handleOpen}>Detail</Button> */}\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen} style={{ margin: \"20px\" }}>\n        Ubah\n      </Button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}