{"ast":null,"code":"var _jsxFileName = \"/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/register/Register.jsx\";\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MaterialLink from \"@material-ui/core/Link\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../redux/actions/userActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\"; // import Logo from \"../components/logo/Tourist.jpg\";\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Copyright Â© \", /*#__PURE__*/React.createElement(MaterialLink, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"SEARAH\"), \" \", new Date().getFullYear(), \".\");\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(16),\n    marginBottom: theme.spacing(16),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    background: \"linear-gradient(rgba(81, 86, 137),rgba(102, 151, 167),rgba(140, 205, 194),rgba(190, 218, 199),rgba(250, 235, 208),transparent)\",\n    // background:\"linear-gradient(rgba(255, 209, 176),rgba(255, 130, 154),rgba(226, 125, 161),rgba(132, 108, 152),rgba(53, 110, 154),transparent)\",\n    // backgroundColor: \"#faebd0\",\n    padding: 5\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    // fontFamily: 'Kalam, cursive',\n    fontFamily: \"Comfortaa, cursive\",\n    backgroundColor: \"#8ccdc2\",\n    background: \"linear-gradient(rgba(81, 86, 137),rgba(102, 151, 167, 0.5),transparent)\",\n    color: \"whitesmoke\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 178 // backgroundColor: \"whitesmoke\"\n\n  },\n  large: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    margin: 20\n  },\n  font: {\n    // fontFamily: 'Kalam, cursive',\n    fontFamily: \"Comfortaa, cursive\" // backgroundColor: \"whitesmoke\"\n\n  },\n  font2: {\n    // fontFamily: 'Kalam, cursive',\n    fontFamily: \"Comfortaa, cursive\",\n    color: \"whitesmoke\",\n    marginTop: 10\n  },\n  font3: {\n    // fontFamily: 'Kalam, cursive',\n    fontFamily: \"Comfortaa, cursive\" // color: \"whitesmoke\"\n\n  },\n  background: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: theme.spacing(8),\n    alignItems: \"center\"\n  },\n  floatingLabelFocusStyle: {\n    color: \"#0c3854\",\n    fontFamily: \"Comfortaa, cursive\"\n  }\n}));\nexport default function SignUp() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    className: classes.font2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"SEARAH\"), /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: Logo,\n    className: classes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.font2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      gender: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = \"Required\";\n      }\n\n      if (!values.gender) {\n        errors.gender = \"Required\";\n      }\n\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n\n      return errors;\n    },\n    onSubmit: async values => {// await dispatch(addUser(values, history));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, ({\n    handleChange,\n    handleSubmit,\n    values,\n    isSubmitting,\n    handleBlur,\n    errors,\n    touched\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"username\",\n      name: \"username\",\n      variant: \"outlined\" // required\n      ,\n      fullWidth: true,\n      id: \"username\",\n      label: \"User Name\",\n      onChange: handleChange,\n      value: values.username,\n      onBlur: handleBlur,\n      className: classes.font,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }, errors.username && touched.username && errors.username)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-age-native-simple\",\n      style: {\n        marginLeft: \"8px\"\n      },\n      className: classes.floatingLabelFocusStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 49\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      value: values.gender // onChange={handleToChange}\n      ,\n      variant: \"outlined\" // required\n      ,\n      fullWidth: true,\n      id: \"gender\",\n      label: \"gender\",\n      type: \"gender\",\n      name: \"gender\",\n      onChange: handleChange,\n      onBlur: handleBlur // value={values.gender}\n      ,\n      className: classes.textField,\n      inputProps: {\n        name: \"gender\",\n        id: \"outlined-age-native-simple\",\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 53\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 53\n      }\n    }, \"Female\"))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, errors.gender && touched.gender && errors.gender)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      className: classes.font,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 45\n      }\n    }, errors.email && touched.email && errors.email)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      className: classes.font,\n      InputLabelProps: {\n        className: classes.floatingLabelFocusStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 45\n      }\n    }, errors.password && touched.password && errors.password))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\" // color=\"#c78daa\"\n      ,\n      className: classes.submit,\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }, \"Sign Up\")));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: \"none\"\n    },\n    className: classes.font3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, \"Already have an account? Sign in\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/components/register/Register.jsx"],"names":["React","Avatar","Button","CssBaseline","TextField","Grid","Box","Typography","makeStyles","Container","Formik","Link","useHistory","MaterialLink","useDispatch","addUser","InputLabel","Select","FormControl","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","marginBottom","display","flexDirection","alignItems","background","padding","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","fontFamily","color","container","flexWrap","textField","marginLeft","marginRight","large","height","font","font2","font3","floatingLabelFocusStyle","SignUp","classes","dispatch","history","Logo","username","gender","email","password","values","errors","test","handleChange","handleSubmit","isSubmitting","handleBlur","touched","className","fontStyle","formControl","name","id","shrink","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MaterialLink from \"@material-ui/core/Link\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../redux/actions/userActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\n// import Logo from \"../components/logo/Tourist.jpg\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright Â© \"}\n            <MaterialLink color=\"inherit\" href=\"https://material-ui.com/\">\n                SEARAH\n            </MaterialLink>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(16),\n        marginBottom: theme.spacing(16),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background:\n            \"linear-gradient(rgba(81, 86, 137),rgba(102, 151, 167),rgba(140, 205, 194),rgba(190, 218, 199),rgba(250, 235, 208),transparent)\",\n        // background:\"linear-gradient(rgba(255, 209, 176),rgba(255, 130, 154),rgba(226, 125, 161),rgba(132, 108, 152),rgba(53, 110, 154),transparent)\",\n        // backgroundColor: \"#faebd0\",\n        padding: 5,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        // fontFamily: 'Kalam, cursive',\n        fontFamily: \"Comfortaa, cursive\",\n        backgroundColor: \"#8ccdc2\",\n        background:\n            \"linear-gradient(rgba(81, 86, 137),rgba(102, 151, 167, 0.5),transparent)\",\n        color: \"whitesmoke\",\n    },\n    container: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 178,\n        // backgroundColor: \"whitesmoke\"\n    },\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n        margin: 20,\n    },\n    font: {\n        // fontFamily: 'Kalam, cursive',\n        fontFamily: \"Comfortaa, cursive\",\n        // backgroundColor: \"whitesmoke\"\n    },\n    font2: {\n        // fontFamily: 'Kalam, cursive',\n        fontFamily: \"Comfortaa, cursive\",\n        color: \"whitesmoke\",\n        marginTop: 10,\n    },\n    font3: {\n        // fontFamily: 'Kalam, cursive',\n        fontFamily: \"Comfortaa, cursive\",\n        // color: \"whitesmoke\"\n    },\n    background: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(8),\n        alignItems: \"center\",\n    },\n    floatingLabelFocusStyle: {\n        color: \"#0c3854\",\n        fontFamily: \"Comfortaa, cursive\",\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h4\"\n                    className={classes.font2}\n                >\n                    SEARAH\n                </Typography>\n                <Avatar alt=\"Remy Sharp\" src={Logo} className={classes.large} />\n                {/* <Avatar className={classes.avatar} style={{ backgroundColor: \"#33CC33\" }}>\n                    <CallMergeIcon />\n                </Avatar> */}\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    className={classes.font2}\n                >\n                    Sign up\n                </Typography>\n                <Formik\n                    initialValues={{\n                        username: \"\",\n                        gender: \"\",\n                        email: \"\",\n                        password: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.username) {\n                            errors.username = \"Required\";\n                        }\n                        if (!values.gender) {\n                            errors.gender = \"Required\";\n                        }\n\n                        if (!values.password) {\n                            errors.password = \"Required\";\n                        }\n\n                        if (!values.email) {\n                            errors.email = \"Required\";\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                                values.email\n                            )\n                        ) {\n                            errors.email = \"Invalid email address\";\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={async (values,) => {\n                        // await dispatch(addUser(values, history));\n            \n                    }}\n                >\n                    {({\n                        handleChange,\n                        handleSubmit,\n                        values,\n                        isSubmitting,\n                        handleBlur,\n                        errors,\n                        touched,\n                    }) => {\n                        return (\n                            <div>\n                                <form\n                                    className={classes.form}\n                                    noValidate\n                                    onSubmit={handleSubmit}\n                                >\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                autoComplete=\"username\"\n                                                name=\"username\"\n                                                variant=\"outlined\"\n                                                // required\n                                                fullWidth\n                                                id=\"username\"\n                                                label=\"User Name\"\n                                                onChange={handleChange}\n                                                value={values.username}\n                                                onBlur={handleBlur}\n                                                className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.username &&\n                                                    touched.username &&\n                                                    errors.username}\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <FormControl\n                                                variant=\"outlined\"\n                                                className={classes.formControl}\n                                            >\n                                                <InputLabel\n                                                    htmlFor=\"outlined-age-native-simple\"\n                                                    style={{\n                                                        marginLeft: \"8px\",\n                                                    }}\n                                                    className={\n                                                        classes.floatingLabelFocusStyle\n                                                    }\n                                                >\n                                                    Gender\n                                                </InputLabel>\n                                                <Select\n                                                    native\n                                                    value={values.gender}\n                                                    // onChange={handleToChange}\n                                                    variant=\"outlined\"\n                                                    // required\n                                                    fullWidth\n                                                    id=\"gender\"\n                                                    label=\"gender\"\n                                                    type=\"gender\"\n                                                    name=\"gender\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    // value={values.gender}\n                                                    className={\n                                                        classes.textField\n                                                    }\n                                                    inputProps={{\n                                                        name: \"gender\",\n                                                        id:\n                                                            \"outlined-age-native-simple\",\n                                                        shrink: true,\n                                                    }}\n                                                >\n                                                    <option\n                                                        aria-label=\"None\"\n                                                        value=\"\"\n                                                    />\n                                                    <option value=\"Male\">\n                                                        Male\n                                                    </option>\n                                                    <option value=\"Female\">\n                                                        Female\n                                                    </option>\n                                                    {/* <option value={30}>T</option> */}\n                                                </Select>\n                                            </FormControl>\n                                            {/* <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"gender\"\n                                                label=\"gender\"\n                                                type=\"gender\"\n                                                name=\"gender\"\n                                                className={classes.textField}\n                                                InputProps={{\n                                                    shrink: true,\n                                                }}\n                                                \n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.gender}\n                                                \n                                            /> */}\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.gender &&\n                                                    touched.gender &&\n                                                    errors.gender}\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"email\"\n                                                label=\"Email Address\"\n                                                name=\"email\"\n                                                autoComplete=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.email &&\n                                                    touched.email &&\n                                                    errors.email}\n                                            </p>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"password\"\n                                                label=\"Password\"\n                                                type=\"password\"\n                                                id=\"password\"\n                                                autoComplete=\"current-password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                className={classes.font}\n                                                InputLabelProps={{\n                                                    className:\n                                                        classes.floatingLabelFocusStyle,\n                                                }}\n                                            />\n                                            <p\n                                                style={{\n                                                    color: \"red\",\n                                                    fontStyle: \"italic\",\n                                                }}\n                                            >\n                                                {errors.password &&\n                                                    touched.password &&\n                                                    errors.password}\n                                            </p>\n                                        </Grid>\n                                    </Grid>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        // color=\"#c78daa\"\n                                        className={classes.submit}\n                                        disabled={isSubmitting}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </form>\n                            </div>\n                        );\n                    }}\n                </Formik>\n                <Grid container justify=\"flex-end\">\n                    <Grid item>\n                        <Link\n                            to=\"/\"\n                            style={{ textDecoration: \"none\" }}\n                            className={classes.font3}\n                        >\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </div>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}