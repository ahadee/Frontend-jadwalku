{"ast":null,"code":"import axios from \"axios\";\nimport { UPDATE_USER, GET_USER } from \"./types\";\nconst apiUrl = \"https://jadwalku-app.herokuapp.com/users\"; // const url = `${apiUrl}/users`\n\nexport const updateDataUser = user => {\n  // console.log(user,\"ini user\");\n  return dispatch => {\n    // console.log(dispatch, \"ini disptach\");\n    const url = `${apiUrl}/${user.id}`;\n    axios.put(url, user).then(response => {\n      dispatch({\n        type: UPDATE_USER,\n        payload: user\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}; // Post new user data to API\n\nexport const addUser = (values, history) => {\n  return dispatch => {\n    return axios.post(`${apiUrl}`, values).then(response => {\n      dispatch(addUserSuccess(response.data));\n      history.push(`/`);\n    }).catch(error => {\n      throw error;\n    });\n  };\n}; // Update userList state in redux store with new user data\n// This function will automatically executed if addUser function is called\n\nexport const addUserSuccess = data => {\n  return {\n    type: \"POST_USER\",\n    payload: {\n      data\n    }\n  };\n};\nexport const getUser = id => {\n  return dispatch => {\n    // const url = `https://5e9407d7c7393c0016de4cfc.mockapi.io/users/${id}`;\n    const url = `${apiUrl}/${id}`;\n    axios.get(url).then(response => {\n      dispatch({\n        type: GET_USER,\n        payload: response.data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}; // Assign user data from API to userList state in redux store\n// This function will automatically executed if getUser function is called\n// ini buat apa ya?\n\nexport const getUserSuccess = users => {\n  return {\n    type: \"GET_USER\",\n    users\n  };\n};","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/redux/actions/userActions.js"],"names":["axios","UPDATE_USER","GET_USER","apiUrl","updateDataUser","user","dispatch","url","id","put","then","response","type","payload","catch","error","addUser","values","history","post","addUserSuccess","data","push","getUser","get","getUserSuccess","users"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,MAAMC,MAAM,GAAG,0CAAf,C,CACA;;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAW;AACrC;AACA,SAAQC,QAAD,IAAc;AACjB;AAEA,UAAMC,GAAG,GAAI,GAAEJ,MAAO,IAAGE,IAAI,CAACG,EAAG,EAAjC;AAEAR,IAAAA,KAAK,CACAS,GADL,CACSF,GADT,EACcF,IADd,EAEKK,IAFL,CAEWC,QAAD,IAAc;AAChBL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEX,WADD;AAELY,QAAAA,OAAO,EAAER;AAFJ,OAAD,CAAR;AAIH,KAPL,EAQKS,KARL,CAQYC,KAAD,IAAW;AACd,YAAMA,KAAN;AACH,KAVL;AAWH,GAhBD;AAiBH,CAnBM,C,CAqBP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACxC,SAAQZ,QAAD,IAAc;AACjB,WAAON,KAAK,CACPmB,IADE,CACI,GAAEhB,MAAO,EADb,EACgBc,MADhB,EAEFP,IAFE,CAEIC,QAAD,IAAc;AAChBL,MAAAA,QAAQ,CAACc,cAAc,CAACT,QAAQ,CAACU,IAAV,CAAf,CAAR;AACAH,MAAAA,OAAO,CAACI,IAAR,CAAc,GAAd;AACH,KALE,EAMFR,KANE,CAMKC,KAAD,IAAW;AACd,YAAMA,KAAN;AACH,KARE,CAAP;AASH,GAVD;AAWH,CAZM,C,CAcP;AACA;;AACA,OAAO,MAAMK,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO;AACHT,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAE;AACLQ,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,OAAO,GAAIf,EAAD,IAAQ;AAC3B,SAAQF,QAAD,IAAc;AACjB;AACA,UAAMC,GAAG,GAAI,GAAEJ,MAAO,IAAGK,EAAG,EAA5B;AAEAR,IAAAA,KAAK,CACAwB,GADL,CACSjB,GADT,EAEKG,IAFL,CAEWC,QAAD,IAAc;AAChBL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEV,QADD;AAELW,QAAAA,OAAO,EAAEF,QAAQ,CAACU;AAFb,OAAD,CAAR;AAIH,KAPL,EAQKP,KARL,CAQYC,KAAD,IAAW;AACd,YAAMA,KAAN;AACH,KAVL;AAWH,GAfD;AAgBH,CAjBM,C,CAmBP;AACA;AAEA;;AACA,OAAO,MAAMU,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO;AACHd,IAAAA,IAAI,EAAE,UADH;AAEHc,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import axios from \"axios\";\nimport { UPDATE_USER, GET_USER } from \"./types\"\nconst apiUrl = \"https://jadwalku-app.herokuapp.com/users\"\n// const url = `${apiUrl}/users`\n\nexport const updateDataUser = (user) =>  {\n    // console.log(user,\"ini user\");\n    return (dispatch) => {\n        // console.log(dispatch, \"ini disptach\");\n        \n        const url = `${apiUrl}/${user.id}`;\n        \n        axios\n            .put(url, user)\n            .then((response) => {\n                dispatch({\n                    type: UPDATE_USER,\n                    payload: user,\n                })\n            })\n            .catch((error) => {\n                throw error;\n            })\n    }\n};\n\n// Post new user data to API\nexport const addUser = (values, history) => {\n    return (dispatch) => {\n        return axios\n            .post(`${apiUrl}`, values)\n            .then((response) => {\n                dispatch(addUserSuccess(response.data));\n                history.push(`/`);\n            })\n            .catch((error) => {\n                throw error;\n            });\n    };\n};\n\n// Update userList state in redux store with new user data\n// This function will automatically executed if addUser function is called\nexport const addUserSuccess = (data) => {\n    return {\n        type: \"POST_USER\",\n        payload: {\n            data,\n        },\n    };\n};\n\nexport const getUser = (id) => {\n    return (dispatch) => {\n        // const url = `https://5e9407d7c7393c0016de4cfc.mockapi.io/users/${id}`;\n        const url = `${apiUrl}/${id}`;\n\n        axios\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: GET_USER,\n                    payload: response.data,\n                });\n            })\n            .catch((error) => {\n                throw error;\n            });\n    };\n};\n\n// Assign user data from API to userList state in redux store\n// This function will automatically executed if getUser function is called\n\n// ini buat apa ya?\nexport const getUserSuccess = (users) => {\n    return {\n        type: \"GET_USER\",\n        users,\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}