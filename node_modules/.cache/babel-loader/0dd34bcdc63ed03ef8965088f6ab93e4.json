{"ast":null,"code":"import axios from \"axios\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst url = `${apiUrl}/users`; // Post new user data to API\n\nexport const addUser = (values, history) => {\n  return dispatch => {\n    return axios.post(`${url}`, values).then(response => {\n      dispatch(addUserSuccess(response.data));\n      history.push(`/`);\n    }).catch(error => {\n      throw error;\n    });\n  };\n}; // Update userList state in redux store with new user data\n// This function will automatically executed if addUser function is called\n\nexport const addUserSuccess = data => {\n  return {\n    type: \"POST_USER\",\n    payload: {\n      data\n    }\n  };\n};","map":{"version":3,"sources":["/home/bagus/Documents/impactbyte/tes-kesiapan-kerja/Front-End/src/redux/actions/userActions.js"],"names":["axios","apiUrl","process","env","REACT_APP_API_URL","url","addUser","values","history","dispatch","post","then","response","addUserSuccess","data","push","catch","error","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,MAAMC,GAAG,GAAI,GAAEJ,MAAO,QAAtB,C,CAEA;;AACA,OAAO,MAAMK,OAAO,GAAG,CAACC,MAAD,EAAQC,OAAR,KAAoB;AACvC,SAAQC,QAAD,IAAc;AACjB,WAAOT,KAAK,CACPU,IADE,CACI,GAAEL,GAAI,EADV,EACaE,MADb,EAEFI,IAFE,CAEIC,QAAD,IAAc;AAChBH,MAAAA,QAAQ,CAACI,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAf,CAAR;AACAN,MAAAA,OAAO,CAACO,IAAR,CAAc,GAAd;AACH,KALE,EAMFC,KANE,CAMKC,KAAD,IAAW;AACd,YAAMA,KAAN;AACH,KARE,CAAP;AASH,GAVD;AAWH,CAZM,C,CAcP;AACA;;AACA,OAAO,MAAMJ,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO;AACHI,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAE;AACLL,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM","sourcesContent":["import axios from \"axios\";\n\nconst apiUrl = process.env.REACT_APP_API_URL\nconst url = `${apiUrl}/users`\n\n// Post new user data to API\nexport const addUser = (values,history) => {\n    return (dispatch) => {\n        return axios\n            .post(`${url}`, values)\n            .then((response) => {\n                dispatch(addUserSuccess(response.data));\n                history.push(`/`);\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }; \n};\n\n// Update userList state in redux store with new user data\n// This function will automatically executed if addUser function is called\nexport const addUserSuccess = (data) => {\n    return {\n        type: \"POST_USER\",\n        payload: {\n            data,\n        },\n    };\n};"]},"metadata":{},"sourceType":"module"}